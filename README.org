** Repurpose a UniFI Cloud Key and install Pi-hole
- Upgrade Cloud Key firmware (1.1.19 as of typing)
- Reset to factory defaults, reboot and SSH to the Cloud Key (ubnt/ubnt)
- Run install script and/or keep on reading:
    #+begin_src shell
    curl -sSL https://raw.githubusercontent.com/planetbeldar/unifi-cloudkey-pi-hole/main/install.sh | bash
    #+end_src

** Manul steps
1) Uninstall packages used by ubnt and conflicting php packages:
    #+begin_src shell
    dpkg -P cloudkey-webui ubnt-freeradius-setup freeradius-ldap freeradius-common freeradius-utils libfreeradius2 freeradius php5-cli php5-common php5-fpm php5-json ubnt-unifi-setup
    #+end_src

2) We're going to upgrade Debian to the latest stable version (bullseye, 11 as of typing)
   Remove old debian source lists:
    #+begin_src shell
    rm /etc/apt/sources.list
    rm /etc/apt/sources.list.d/*
    #+end_src

3) Add new source lists:
    #+begin_src shell
    echo "deb http://deb.debian.org/debian bullseye main contrib non-free
    deb-src http://deb.debian.org/debian bullseye main contrib non-free

    deb http://deb.debian.org/debian-security/ bullseye-security main contrib non-free
    deb-src http://deb.debian.org/debian-security/ bullseye-security main contrib non-free

    deb http://deb.debian.org/debian bullseye-updates main contrib non-free
    deb-src http://deb.debian.org/debian bullseye-updates main contrib non-free" > /etc/apt/sources.list

    echo "deb https://deb.nodesource.com/node_16.x bullseye main" > /etc/apt/sources.list.d/nodesource.list
    #+end_src

4) Update sources:
    #+begin_src shell
    apt-get update
    #+end_src

5) If we encounter signature verification errors, we need to add the public keys manually (replace the keys if necessary):
    #+begin_src
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138 0E98404D386FA1D9 605C66F00D6C9793 112695A0E562B32A 54404762BBB6E853
    #+end_src

6) Perform the Debian upgrade (repeat steps as necessary, maybe dist-upgrade works?):
    #+begin_src
    apt-get upgrade
    apt-get --with-new-pkgs upgrade # (to install 'kept-back' packages)
    apt-get install apt curl # (for stuborn packages still in 'kept-back')
    #+end_src

7) If upgraded configuration files conflict, choose to 'keep your currently-installed version'
   Please inspect diff and make a sane decision - is the config required by the CK (keep) or not? (use package maintainers)
   If we encounter dpkg 'trying to overwrite' errors, we can force-overwrite them manually (replace the deb package as necessary):
    #+begin_src
    dpkg -i --force-overwrite /var/cache/apt/archives/init-system-helpers_1.60_all.deb
    #+end_src

8) Install Pi-hole
   Use eth0 as the network interface
    #+begin_src shell
    curl -sSL https://install.pi-hole.net | bash
    #+end_src

9) Start lighttpd and stop/mask possible port conflicts
    #+begin_src shell
    service nginx stop
    systemctl stop systemd-resolved
    systemctl mask systemd-resolved nginx

    systemctl start lighttpd
    systemctl status lighttpd # check that its running

    echo "[Resolve]
    DNS=1.1.1.1
    DNSStubListener=no" > /etc/systemd/resolved.conf

    pihole -r # repair pihole
    pihole -a -p # set pihole webui password
    #+end_src

** Optional: Use Conditional Forwarding (when not running Pi-hole as DHCP)
- Enable settings (use your own local networks ip range and DHCP server)
    #+begin_src shell
    sed -i '/^rev-server=/d' /etc/dnsmasq.d/01-pihole.conf
    echo 'rev-server=10.1.0.0/16,10.1.1.1' >> /etc/dnsmasq.d/01-pihole.conf # <CIDR>,<DHCP-server>
    sed -i '/^REV_SERVER/d' /etc/pihole/setupVars.conf
    echo 'REV_SERVER=true
REV_SERVER_CIDR=10.1.0.0/16
REV_SERVER_TARGET=10.1.1.1
REV_SERVER_DOMAIN=localdomain' >> /etc/pihole/setupVars.conf
    service pihole-FTL restart
    #+end_src

- (Optional) Refresh USG //etc/hosts
  https://nathan.thenovaks.net/2021/04/20/clear-dns-cache-from-dchp-on-unifi-security-gateway/
    #+begin_src shell
    ssh <usg ip> -l <user>
    sudo vi /etc/hosts # remove old entries set by dhcp
    sudo /etc/init.d/dnsmasq force-reload # reload dnsmasq
    clear dhcp leases # optional - different from rm /config/dhcpd.leases ?
    #+end_src

** Optional: Allow subnets to use the DNS
- Enable settings (would prefer to use listen-address - not an option in the pihole interface)
    #+begin_src shell
    sed -i '/^local-service/d' /etc/dnsmasq.d/01-pihole.conf
    echo 'interface=eth0' >> /etc/dnsmasq.d/01-pihole.conf
    sed -i '/^DNSMASQ_LISTENING=/d' /etc/pihole/setupVars.conf
    echo 'DNSMASQ_LISTENING=single' >> /etc/pihole/setupVars.conf
    #+end_src

** Optional: Add custom adlist - https://dbl.oisd.nl
    #+begin_src shell
    apt-get install sqlite3
    sqlite3 /etc/pihole/gravity.db "INSERT INTO adlist (address, comment) VALUES ('https://dbl.oisd.nl', 'https://oisd.nl');"
    pihole -g
    #+end_src

** Optional: Unbound
https://docs.pi-hole.net/guides/dns/unbound/
1. Install unbound (should also install dns-root-data if it's not already installed)
    #+begin_src shell
    apt-get install unbound
    systemctl disable unbound-resolvconf.service
    #+end_src

2. Update unbound Pi-hole configuration
    #+begin_src shell
    curl -sSL https://raw.githubusercontent.com/planetbeldar/unifi-cloudkey-pi-hole/main/unbound-pi-hole.conf > /etc/unbound/unbound.conf.d/pi-hole.conf
    service unbound restart
    echo 'edns-packet-max=1232' > /etc/dnsmasq.d/99-edns.conf # tell FTL to use same limit as specified in unbound config
    #+end_src

3. Update dnsmasq and pi-hole configuration
    #+begin_src shell
    sed -i '/^server=/d' /etc/dnsmasq.d/01-pihole.conf && echo 'server=127.0.0.1#5335' >> /etc/dnsmasq.d/01-pihole.conf
    sed -i '/^PIHOLE_DNS_[0-9]=/d' /etc/pihole/setupVars.conf && echo 'PIHOLE_DNS_1=127.0.0.1#5335' >> /etc/pihole/setupVars.conf
    service pihole-FTL restart
    #+end_src
